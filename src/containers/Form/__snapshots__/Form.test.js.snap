// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    isLoading={[MockFunction]}
    setLocation={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h1>
          Rotten Potatoes
        </h1>,
        <label
          htmlFor="address"
        >
          Enter an address:
        </label>,
        <input
          id="address"
          onChange={[Function]}
          placeholder="ex. 123 Fake Address, Denver, CO"
          type="text"
          value=""
        />,
        <h3>
          OR
        </h3>,
        <NavLink
          onClick={[Function]}
          to="/Rotten-Potatoes/locations"
        >
          Find My Location
        </NavLink>,
      ],
      "className": "Form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Rotten Potatoes",
        },
        "ref": null,
        "rendered": "Rotten Potatoes",
        "type": "h1",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Enter an address:",
          "htmlFor": "address",
        },
        "ref": null,
        "rendered": "Enter an address:",
        "type": "label",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "id": "address",
          "onChange": [Function],
          "placeholder": "ex. 123 Fake Address, Denver, CO",
          "type": "text",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "OR",
        },
        "ref": null,
        "rendered": "OR",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "Find My Location",
          "onClick": [Function],
          "to": "/Rotten-Potatoes/locations",
        },
        "ref": null,
        "rendered": "Find My Location",
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h1>
            Rotten Potatoes
          </h1>,
          <label
            htmlFor="address"
          >
            Enter an address:
          </label>,
          <input
            id="address"
            onChange={[Function]}
            placeholder="ex. 123 Fake Address, Denver, CO"
            type="text"
            value=""
          />,
          <h3>
            OR
          </h3>,
          <NavLink
            onClick={[Function]}
            to="/Rotten-Potatoes/locations"
          >
            Find My Location
          </NavLink>,
        ],
        "className": "Form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Rotten Potatoes",
          },
          "ref": null,
          "rendered": "Rotten Potatoes",
          "type": "h1",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Enter an address:",
            "htmlFor": "address",
          },
          "ref": null,
          "rendered": "Enter an address:",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "id": "address",
            "onChange": [Function],
            "placeholder": "ex. 123 Fake Address, Denver, CO",
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "OR",
          },
          "ref": null,
          "rendered": "OR",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "Find My Location",
            "onClick": [Function],
            "to": "/Rotten-Potatoes/locations",
          },
          "ref": null,
          "rendered": "Find My Location",
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
